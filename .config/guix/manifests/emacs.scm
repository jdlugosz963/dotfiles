;; This file is auto-generated by Emacs function: jd/manifest-generate-to-file
(use-modules (gnu packages emacs-xyz)
	     (gnu packages)
	     (guix packages)
	     (guix git-download)
	     (guix build-system emacs)
	     ((guix licenses) #:prefix license:))


(define-public emacs-org-roam-ui
  (let ((commit "9474a254390b1e42488a1801fed5826b32a8030b")
        (revision "0"))
    (package
      (name "emacs-org-roam-ui")
      (version (git-version "0" revision commit))
      (source (origin
                (method git-fetch)
                (uri (git-reference
                      (url "https://github.com/org-roam/org-roam-ui")
                      (commit commit)))
              (file-name (git-file-name name version))
              (sha256
               (base32
                "0v54vxh95izch74wz2dl2dkdqicbvshra55l6qvd4xl5qmfhpjdc"))))
      (build-system emacs-build-system)
      (arguments
       `(#:include (cons "^out" %default-include)))
      (propagated-inputs
       (list emacs-org-roam emacs-websocket emacs-simple-httpd emacs-f))
      (home-page "https://github.com/org-roam/org-roam-ui")
      (synopsis "A graphical frontend for your org-roam Zettelkasten")
      (description " Org-Roam-UI is a frontend for exploring and interacting
with your @code{org-roam} notes. It is meant a successor of
@code{org-roam-server} that extends functionality of org-roam with a Web app
that runs side-by-side with Emacs.")
      (license license:gpl3+))))



(define emacs-lsp-mode--new
  (let ((commit "808c4d0ab9f19bb92c56716cf59df89432b63f5d")
	(revision "1"))
    (package
     (inherit emacs-lsp-mode)
     (name "emacs-lsp-mode")
     (version (git-version "8.0.1" revision commit))
     (source
      (origin
       (method git-fetch)
       (uri (git-reference
             (url "https://github.com/emacs-lsp/lsp-mode")
             (commit commit)))
       (file-name (git-file-name name version))
       (sha256
	(base32 "0ridjhzndwjj8947vabq05njgnns74hi69x77axgcbv1c4nasz2y")))))))


(define emacs-packages
  (specifications->manifest
   '("emacs-ytdl"
     "emacs-desktop-environment"
     "emacs-exwm"
     "emacs-perspective"
     "emacs-mu4e-alert"
     "mu"
     "isync"
     "emacs-htmlize"
     "emacs-bluetooth"
     "emacs-nov-el"
     "emacs-password-store"
     "emacs-mastodon"
     "emacs-elfeed"
     "emacs-pdf-tools"
     "emacs-emms"
     "emacs-all-the-icons-dired"
     "emacs-vterm"
     "emacs-restclient"
     "emacs-magit"
     "emacs-neotree"
     "emacs-projectile"
     "emacs-company-box"
     "emacs-company"
     "emacs-docker"
     "emacs-yaml-mode"
     "emacs-web-mode"
     "emacs-flycheck"
     "emacs-tide"
     "emacs-cider"
     "emacs-typescript-mode"
     "emacs-pyvenv"
     "emacs-geiser-guile"
     "emacs-racket-mode"
     "emacs-geiser-racket"
     "emacs-geiser"
     "emacs-sly"
     "emacs-rainbow-delimiters"
     "emacs-paredit"
     ;; "emacs-lsp-ivy"
     ;; "emacs-lsp-mode"
     "emacs-org-roam"
     "emacs-org-roam-bibtex"
     "emacs-org-superstar"
     "emacs-org"
     "emacs-ox-pandoc"
     "emacs-beacon"
     "emacs-all-the-icons"
     "emacs-which-key"
     "emacs-counsel"
     "emacs-ivy"
     "emacs-hl-todo"
     "emacs-diminish"
     "emacs-solarized-theme"
     "font-terminus"
     "emacs-undo-tree"
     "emacs-hydra"
     "emacs-general"
     "emacs-guix"
     "emacs"
     "emacs-use-package"
     )))


(concatenate-manifests
 (list emacs-packages
       (packages->manifest (list emacs-lsp-mode--new
				 emacs-org-roam-ui))))
